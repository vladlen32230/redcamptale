"""Create all tables

Revision ID: 977b0921b40b
Revises: 
Create Date: 2025-05-31 14:59:12.587547

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '977b0921b40b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create tables without circular foreign keys first
    op.create_table('environments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('previous_environment_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('previous_environment_characters', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('previous_environment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['previous_environment_id'], ['environments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('map_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time', sa.String(), nullable=True),
    sa.Column('character_location', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character', sa.String(), nullable=True),
    sa.Column('english_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('russian_translation', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('previous_message_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['previous_message_id'], ['messages.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create users table without the circular foreign key
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_biography_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_biography_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_biography_russian_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_biography_russian_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('subscription_tier', sa.String(), nullable=True),
    sa.Column('subscription_started_at', sa.DateTime(), nullable=True),
    sa.Column('subscription_ends_at', sa.DateTime(), nullable=True),
    sa.Column('last_game_state_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    
    # Create game_states table without the circular foreign key
    op.create_table('game_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('characters', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('music', sa.String(), nullable=True),
    sa.Column('followers', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('last_message_id', sa.Integer(), nullable=True),
    sa.Column('environment_id', sa.Integer(), nullable=True),
    sa.Column('map_state_id', sa.Integer(), nullable=True),
    sa.Column('previous_game_state_id', sa.Integer(), nullable=True),
    sa.Column('links', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['environment_id'], ['environments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['last_message_id'], ['messages.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['map_state_id'], ['map_states.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['previous_game_state_id'], ['game_states.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('saves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('game_state_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['game_state_id'], ['game_states.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('user_daily_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('interaction_input_tokens', sa.Integer(), nullable=False),
    sa.Column('interaction_output_tokens', sa.Integer(), nullable=False),
    sa.Column('interaction_queries', sa.Integer(), nullable=False),
    sa.Column('translation_input_tokens', sa.Integer(), nullable=False),
    sa.Column('translation_output_tokens', sa.Integer(), nullable=False),
    sa.Column('translation_queries', sa.Integer(), nullable=False),
    sa.Column('summarization_input_tokens', sa.Integer(), nullable=False),
    sa.Column('summarization_output_tokens', sa.Integer(), nullable=False),
    sa.Column('summarization_queries', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Now add the circular foreign key constraint
    op.create_foreign_key(
        'fk_users_last_game_state_id',
        'users', 'game_states',
        ['last_game_state_id'], ['id'],
        ondelete='SET NULL'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop the circular foreign key constraint first
    op.drop_constraint('fk_users_last_game_state_id', 'users', type_='foreignkey')
    
    # Drop tables in reverse order
    op.drop_table('user_daily_usage')
    op.drop_table('saves')
    op.drop_table('game_states')
    op.drop_table('users')
    op.drop_table('messages')
    op.drop_table('map_states')
    op.drop_table('environments')
    # ### end Alembic commands ###
